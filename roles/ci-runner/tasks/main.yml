- name: Configuring Host name 
  ansible.builtin.shell: set-hostname ci-runner

- name: Creates directory
  ansible.builtin.file:
    path: /actions-runner
    state: directory
    owner: "{{defuser}}"
    group: "{{defuser}}"

- name: Downloading and extracting runner package
  ansible.builtin.unarchive:
    src: "{{url}}"
    dest: /actions-runner
    remote_src: yes
    owner: "{{defuser}}"
    group: "{{defuser}}"

- name: Installing pre-req packages
  ansible.builtin.dnf:
    name: libicu 
    state: installed

- name: Creates directory for sonar-scanner
  ansible.builtin.file:
    path: /sonar-scanner
    state: directory
    owner: "{{defuser}}"
    group: "{{defuser}}"

- name: Downloading and extracting sonar
  ansible.builtin.unarchive:
    src: "{{sonarUrl}}"
    dest: /sonar-scanner
    remote_src: yes
    owner: "{{defuser}}"
    group: "{{defuser}}"

- name: Fetching Token
  ansible.builtin.shell: | 
      gh api --method POST  -H "Accept: application/vnd.github+json" /orgs/b58-clouddevops/actions/runners/registration-token |jq .token |xargs
  register: token 
  become_user: ec2-user

- name: Printing token 
  ansible.builtin.debug:
    msg: "{{token.stdout}}"

# - name: Configuring Runner 
#   ansible.builtin.shell: /actions-runner/config.sh --url https://github.com/B58-CloudDevOps --token "{{token.stdout}}" --unattended --replace;
#   become_user: "{{defuser}}"
#   args: 
#    chdir: /actions-runner 
#   ignore_errors: yes

- name: Installing Runner 
  ansible.builtin.shell: sudo ./svc.sh start
  args: 
   chdir: /actions-runner

- name: Enrolling Runner 
  ansible.builtin.shell: sudo ./svc.sh start
  args: 
   chdir: /actions-runner

# - name: Configuring the repo
#   ansible.builtin.template:
#     src: elastic.repo
#     dest: /etc/yum.repos.d/elastic.repo

# - name: Installing ELK Stack
#   ansible.builtin.dnf:
#     name: 
#       - elasticsearch
#       - kibana 
#       - logstash 
#       - nginx 
#     state: installed

# - name: Configuring Reverse Proxy For Kibana
#   ansible.builtin.template:
#     src: nginx.conf
#     dest: /etc/nginx/nginx.conf

# - name: Configuring Logstash Config
#   ansible.builtin.template:
#     src: logstash.conf
#     dest: /etc/logstash/conf.d/logstash.conf

# - name: Starting ELK Services
#   ansible.builtin.systemd_service:
#     name: "{{ item }}"
#     state: restarted
#     enabled: true
#   loop: 
#     - elasticsearch
#     - kibana 
#     - logstash 
#     - nginx 

